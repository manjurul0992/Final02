// <auto-generated />
using System;
using Final02.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Final02.Migrations
{
    [DbContext(typeof(Final02Context))]
    partial class Final02ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Final02.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"), 1L, 1);

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("varchar(55)");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Final02.Models.Format", b =>
                {
                    b.Property<int>("FormatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FormatId"), 1L, 1);

                    b.Property<string>("FormatName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("FormatId");

                    b.ToTable("Formats");
                });

            modelBuilder.Entity("Final02.Models.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlayerId"), 1L, 1);

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateOfBirth")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<bool>("MaritalStatus")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("PlayerId");

                    b.HasIndex("CourseId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Final02.Models.SeriesEntry", b =>
                {
                    b.Property<int>("SeriesEntry_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeriesEntry_Id"), 1L, 1);

                    b.Property<int>("FormatId")
                        .HasColumnType("int");

                    b.Property<int?>("PlayerId")
                        .HasColumnType("int");

                    b.HasKey("SeriesEntry_Id");

                    b.HasIndex("FormatId");

                    b.HasIndex("PlayerId");

                    b.ToTable("SeriesEntry", (string)null);
                });

            modelBuilder.Entity("Final02.Models.Player", b =>
                {
                    b.HasOne("Final02.Models.Course", null)
                        .WithMany("Players")
                        .HasForeignKey("CourseId");
                });

            modelBuilder.Entity("Final02.Models.SeriesEntry", b =>
                {
                    b.HasOne("Final02.Models.Format", "Format")
                        .WithMany("SeriesEntries")
                        .HasForeignKey("FormatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__SeriesEnt__Format");

                    b.HasOne("Final02.Models.Player", "Player")
                        .WithMany("SeriesEntries")
                        .HasForeignKey("PlayerId")
                        .HasConstraintName("FK__SeriesEnt__Player");

                    b.Navigation("Format");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("Final02.Models.Course", b =>
                {
                    b.Navigation("Players");
                });

            modelBuilder.Entity("Final02.Models.Format", b =>
                {
                    b.Navigation("SeriesEntries");
                });

            modelBuilder.Entity("Final02.Models.Player", b =>
                {
                    b.Navigation("SeriesEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
